# -*- coding: utf-8 -*-
"""Foodhubx_orderassignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WiGH1_IxtEuA2E3-7Ps5iUqJmu_YbJXw

**Understanding** **the** **structure** **of** **the** **data**

Below is the Dataset for food order's that consists of 1898 Orders distributed across 9 columns and Each column contains different attributes related to orders

**Data** Dictionary

order_id: Unique ID of the order
customer_id: ID of the customer who ordered the food
restaurant_name: Name of the restaurant
cuisine_type: Cuisine ordered by the customer
cost: Cost of the order
day_of_the_week: Indicates whether the order is placed on a weekday or weekend (The weekday is from Monday to Friday and the weekend is Saturday and Sunday)
rating: Rating given by the customer out of 5
food_preparation_time: Time (in minutes) taken by the restaurant to prepare the food. This is calculated by taking the difference between the timestamps of the restaurant's order confirmation and the delivery person's pick-up confirmation.
delivery_time: Time (in minutes) taken by the delivery person to deliver the food package. This is calculated by taking the difference between the timestamps of the delivery person's pick-up confirmation and drop-off information
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
from google.colab import files
uploaded = files.upload()
data = pd.read_csv('foodhub_order.csv')

#copied dataset to dataframe df in order to perform EDA.
df = data.copy()

#Overview of the dataset shape, datatypes - Statistical summary and check for missing values
#getting all the column names & datatypes before performing the operations on the dataset
df.info()

"""And from above columns are categorized as follows:
**Numerical** **Data**:
order_id (integer), customer_id (integer), cost_of_the_order (float), food_preparation_time (integer), and delivery_time (integer).
**Categorical** **Data**:
restaurant_name (string), cuisine_type (string), day_of_the_week (string), and rating (string).

"""

#Getting top 10 records from the actual dataset
df.head(10)

#Bottom 10 records from the dataset
df.tail(10)

#Performing describe operation to get mean,median,sd,count
df.describe()

#Transpose Rows to Columns & Cols to Rows.
df.describe().T

"""The Analysis reveals that there are is no missing values, which proves that data is reliable for further Analysis"""

# Checking missing values
df.isna().sum()

"""**Univariate** **Data** **Analysis**
Use sns.histplot() or plt.hist() for continuous variables (cost, preparation time, delivery time) & sns.countplot() for Categorical values for cuisine type and day of the week.
"""

import matplotlib.pyplot as plt
import seaborn as sns

# Distribution of cost_of_the_order
plt.figure(figsize=(8,6))
sns.histplot(data['cost_of_the_order'], kde=True)
plt.title('Distribution of Order Costs')
plt.show()

# Countplot for cuisine type
plt.figure(figsize=(8,6))
sns.countplot(x='cuisine_type', data=data, order=data['cuisine_type'].value_counts().index)
plt.title('Most Ordered Cuisines')
plt.xticks(rotation=45)
plt.show()

# Rating distribution
plt.figure(figsize=(8,6))
sns.countplot(x='rating', data=data)
plt.title('Distribution of Ratings')
plt.show()

"""**Distribution** **of** **Order** **Costs**

The histogram for order costs highlights that a significant number of transactions are concentrated between $10 and $15. This suggests that this price range is quite appealing to customers, and restaurants might want to ensure their pricing remains competitive within this range.

**Most** **Ordered** **Cuisines**:

The count plot reveals that American, Japanese, and Italian cuisines are the most popular among customers. which helps restaurants to focus more on these types of food in their menu or some kind of advertizing.

**Rating** **bold text** **Distribution**:

The rating analysis reveals that most customers give a score of 5, followed by 4 and 3. This mostly positive feedback suggests that people are happy with their dining experiences, which restaurants can use in their marketing efforts.

Performing operation to count number of not given values from the dataset
"""

#Counting the number of not given rating from the dataset
df['rating'].value_counts()['Not given']

#total length of dataset
df.shape[0]

"""**Multivariate** **Data** **Analysis**
Performing some operations to explose the relationships between different key variables:

1. Initial Analysis on Cuisine Type vs  cost: making sure different cuisines have significantly different costs per order?
2. Data Analysis on Day of the Week vs Cost: Find the Difference between orders placed on weekends generally expensive than on weekdays
3. Exploratory Data Analysis on Preparation Time vs Delivery Time: Find the  correlation between the time it takes a restaurant to prepare an order placed by customer also time it takes for the order to be delivered?
4. Analysis on Cuisine Type vs Rating: Which cuisines tend to receive the highest ratings from customers?
"""

# Boxplot for Cuisine Type vs. Cost
plt.figure(figsize=(10,6))
sns.boxplot(x='cuisine_type', y='cost_of_the_order', data=data)
plt.xticks(rotation=45)
plt.title('Order cost by cusine type')
plt.show()

# Boxplot for Day of the Week vs. Cost
plt.figure(figsize=(8,6))
sns.boxplot(x='day_of_the_week', y='cost_of_the_order', data=data)
plt.title('Order Cost by Day of the Week')
plt.show()

# Correlation heatmap
plt.figure(figsize=(10,6))
corr = data[['cost_of_the_order', 'food_preparation_time', 'delivery_time']].corr()
sns.heatmap(corr, annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

"""Thai and Southern cuisines tend to have higher order costs compared to other cuisines.
The median cost is slightly higher on weekends than on weekdays.
The spread of costs is similar on both days.
"""

#from the Above Graph #American , Japanese, and Italian are the top three most ordered cuisines for both weekdays & weekends.
